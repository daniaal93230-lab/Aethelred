{
  "openapi": "3.1.0",
  "info": {
    "title": "Aethelred API",
    "version": "0.1.0"
  },
  "paths": {
    "/risk/status": {
      "get": {
        "tags": [
          "risk"
        ],
        "summary": "Risk Status",
        "operationId": "risk_status_risk_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Risk Status Risk Status Get"
                }
              }
            }
          }
        }
      }
    },
    "/risk/kill_switch/on": {
      "post": {
        "tags": [
          "risk"
        ],
        "summary": "Kill On",
        "operationId": "kill_on_risk_kill_switch_on_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Kill On Risk Kill Switch On Post"
                }
              }
            }
          }
        }
      }
    },
    "/risk/kill_switch/off": {
      "post": {
        "tags": [
          "risk"
        ],
        "summary": "Kill Off",
        "operationId": "kill_off_risk_kill_switch_off_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Kill Off Risk Kill Switch Off Post"
                }
              }
            }
          }
        }
      }
    },
    "/risk/reset": {
      "post": {
        "tags": [
          "risk"
        ],
        "summary": "Reset Breakers",
        "operationId": "reset_breakers_risk_reset_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Reset Breakers Risk Reset Post"
                }
              }
            }
          }
        }
      }
    },
    "/risk/reload": {
      "post": {
        "tags": [
          "risk"
        ],
        "summary": "Risk Reload",
        "operationId": "risk_reload_risk_reload_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Risk Reload Risk Reload Post"
                }
              }
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "summary": "Healthz",
        "operationId": "healthz_healthz_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/flatten": {
      "post": {
        "summary": "Flatten",
        "description": "Manually flatten all paper positions using latest mids.\nFor tests or dry-run, echo mode and reason with an ok status.",
        "operationId": "flatten_flatten_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/FlattenReq"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Req"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/risk/breaker": {
      "get": {
        "summary": "Breaker View",
        "operationId": "breaker_view_risk_breaker_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Breaker Set",
        "description": "Idempotent setter. Any None is ignored. Setting kill_switch True blocks new trades.\nclear_daily_loss True resets the tripped daily breaker after review.",
        "operationId": "breaker_set_risk_breaker_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BreakerState"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/demo/paper_quick_run": {
      "post": {
        "tags": [
          "demo"
        ],
        "summary": "Paper Quick Run",
        "description": "QA demo route.\nIf the app has a QADevEngine attached at `app.state.engine`, open a tiny in-memory demo position and write a runtime snapshot.\nReturns a compact confirmation for quick verification.",
        "operationId": "paper_quick_run_demo_paper_quick_run_post",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "BTCUSDT",
              "title": "Symbol"
            }
          },
          {
            "name": "qty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0.001,
              "title": "Qty"
            }
          },
          {
            "name": "price",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100.0,
              "title": "Price"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Paper Quick Run Demo Paper Quick Run Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ui/trades": {
      "get": {
        "tags": [
          "ui"
        ],
        "summary": "Trades Html",
        "operationId": "trades_html_ui_trades_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/export/trades.csv": {
      "get": {
        "summary": "Export Trades Csv",
        "description": "Streams trades from the engine store as CSV.\nNo business logic duplication; relies on engine.iter_trades()\nwhich yields dicts with fields matching TRADES_HEADER.",
        "operationId": "export_trades_csv_export_trades_csv_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/export/decisions.csv": {
      "get": {
        "summary": "Export Decisions Csv",
        "operationId": "export_decisions_csv_export_decisions_csv_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 5000,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/train": {
      "post": {
        "tags": [
          "train"
        ],
        "summary": "Trigger Train",
        "description": "Thin trigger for ML training. No training logic here.\nDelegates to engine.orchestrator which enqueues work or signals a worker.\nIdempotent: repeated calls with the same job key should be safe.",
        "operationId": "trigger_train_train_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ml/stop_distance": {
      "post": {
        "summary": "Ml Stop Distance",
        "description": "Infer a stop distance in ATR units for a given feature vector.\n\nRequest: { symbol: string, features: { <feature>: number, ... } }\nResponse: { symbol, stop_atr, horizon_bars, model_version, fit_stats }",
        "operationId": "ml_stop_distance_ml_stop_distance_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StopInferPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ml/intent_veto": {
      "post": {
        "summary": "Ml Intent Veto",
        "operationId": "ml_intent_veto_ml_intent_veto_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VetoInferPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/db_path": {
      "get": {
        "summary": "Db Path",
        "operationId": "db_path_db_path_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/report/daily": {
      "get": {
        "summary": "Report Daily",
        "description": "Returns a compact daily summary and pushes Telegram if env is set.",
        "operationId": "report_daily_report_daily_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Home",
        "operationId": "home__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/": {
      "get": {
        "summary": "Dashboard",
        "operationId": "dashboard_dashboard__get",
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "simple|advanced",
              "title": "Mode"
            },
            "description": "simple|advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/dashboard": {
      "get": {
        "summary": "Dashboard",
        "operationId": "dashboard_dashboard_get",
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "simple|advanced",
              "title": "Mode"
            },
            "description": "simple|advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/runtime_path": {
      "get": {
        "summary": "Runtime Path",
        "operationId": "runtime_path_runtime_path_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/runtime_files": {
      "get": {
        "summary": "Runtime Files",
        "operationId": "runtime_files_runtime_files_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/kill_switch/on": {
      "post": {
        "summary": "Kill On",
        "operationId": "kill_on_kill_switch_on_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/kill_switch/off": {
      "post": {
        "summary": "Kill Off",
        "operationId": "kill_off_kill_switch_off_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/equity_chart.png": {
      "get": {
        "summary": "Equity Chart Png",
        "description": "Minimal PNG chart of equity from SQLite.\nFalls back to a 1x1 transparent PNG if matplotlib is unavailable.",
        "operationId": "equity_chart_png_equity_chart_png_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 2000,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "List Metrics",
        "operationId": "list_metrics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/metrics/{name}": {
      "get": {
        "summary": "Get Metrics Csv",
        "operationId": "get_metrics_csv_metrics__name__get",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 5000,
              "minimum": 0,
              "default": 200,
              "title": "N"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/signals": {
      "get": {
        "summary": "Get Signals",
        "operationId": "get_signals_signals_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/trades/last24h": {
      "get": {
        "summary": "Trades Last24H",
        "description": "Closed trades in last 24h + current open positions.",
        "operationId": "trades_last24h_trades_last24h_get",
        "parameters": [
          {
            "name": "pattern",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "*_ledger.csv",
              "title": "Pattern"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Symbol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/news_state": {
      "get": {
        "summary": "News State",
        "operationId": "news_state_news_state_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/news": {
      "get": {
        "summary": "News Items",
        "operationId": "news_items_news_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/metrics_json": {
      "get": {
        "summary": "Metrics Json",
        "description": "Return a compact dashboard JSON:\n  now, equity, cash, exposure_usd, breaker, regimes, intents, positions, trades_last_24h, winrate_7d, expectancy_7d_usd\nData is stitched from existing CSVs if present. Falls back to zeros.",
        "operationId": "metrics_json_metrics_json_get",
        "parameters": [
          {
            "name": "debug",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Debug"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/pnl_today": {
      "get": {
        "summary": "Pnl Today",
        "description": "Compute today's PnL using the equity series from persistence.\nReturns equity_now, equity_sod, pnl_today_abs, pnl_today_pct.",
        "operationId": "pnl_today_pnl_today_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/risk_profile": {
      "get": {
        "summary": "Risk Profile",
        "operationId": "risk_profile_risk_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/diagnostics": {
      "get": {
        "summary": "Diagnostics",
        "operationId": "diagnostics_diagnostics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/decisions_json": {
      "get": {
        "summary": "Decisions Json",
        "operationId": "decisions_json_decisions_json_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 200,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/settings": {
      "get": {
        "summary": "Get Settings",
        "operationId": "get_settings_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Post Settings",
        "operationId": "post_settings_settings_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/trades/summary": {
      "get": {
        "summary": "Trades Summary",
        "operationId": "trades_summary_trades_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BreakerState": {
        "properties": {
          "kill_switch": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kill Switch"
          },
          "manual_breaker": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manual Breaker"
          },
          "clear_daily_loss": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clear Daily Loss"
          }
        },
        "type": "object",
        "title": "BreakerState"
      },
      "FlattenReq": {
        "properties": {
          "mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mode",
            "default": "paper"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason",
            "default": "manual"
          }
        },
        "type": "object",
        "title": "FlattenReq"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "SettingsPayload": {
        "properties": {
          "risk": {
            "type": "number",
            "title": "Risk"
          },
          "max_pos": {
            "type": "number",
            "title": "Max Pos"
          },
          "no_short": {
            "type": "boolean",
            "title": "No Short"
          },
          "circuit": {
            "type": "boolean",
            "title": "Circuit"
          }
        },
        "type": "object",
        "required": [
          "risk",
          "max_pos",
          "no_short",
          "circuit"
        ],
        "title": "SettingsPayload"
      },
      "StopInferPayload": {
        "properties": {
          "symbol": {
            "type": "string",
            "title": "Symbol"
          },
          "features": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Features"
          }
        },
        "type": "object",
        "required": [
          "symbol",
          "features"
        ],
        "title": "StopInferPayload"
      },
      "TrainRequest": {
        "properties": {
          "job": {
            "type": "string",
            "title": "Job",
            "default": "default"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "TrainRequest"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VetoInferPayload": {
        "properties": {
          "symbol": {
            "type": "string",
            "title": "Symbol"
          },
          "features": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Features"
          },
          "threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Threshold"
          }
        },
        "type": "object",
        "required": [
          "symbol",
          "features"
        ],
        "title": "VetoInferPayload"
      }
    }
  }
}